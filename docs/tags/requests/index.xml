<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>requests - tag - XiaoXi Blog</title>
        <link>/tags/requests/</link>
        <description>requests - tag - XiaoXi Blog</description>
        <generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 24 Apr 2020 00:00:00 &#43;0000</lastBuildDate><atom:link href="/tags/requests/" rel="self" type="application/rss+xml" /><item>
    <title>requests基本用法</title>
    <link>/python/requests%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</link>
    <pubDate>Fri, 24 Apr 2020 00:00:00 &#43;0000</pubDate>
    <author></author>
    <guid>/python/requests%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</guid>
    <description><![CDATA[基本的GET、POST请求方法
GET请求 HTTP中最常见的请求之一就是GET请求，用requests构建GET请求非常方便。
使用requests.get() import requests r = requests.get(&#39;https://baidu.com/&#39;) print(type(r)) print(type(r.text)) print(r.status_code) print(r.cookies) print(r.text) 输出：
&lt;class &#39;requests.models.Response&#39;&gt; &lt;class &#39;str&#39;&gt; 200 &lt;RequestsCookieJar[&lt;Cookie BDORZ=27315 for .baidu.com/&gt;]&gt; # 部分代码 &lt;!DOCTYPE html&gt; &lt;!--STATUS OK--&gt;&lt;html&gt; &lt;head&gt; .... &lt;/body&gt; &lt;/html&gt; 使用requests.get()方法，即可以GET方式请求网页。
 status_code属性获取状态码 cookies属性获取cookies text属性获取网页内容 headers属性获取响应头 url属性获取URL history属性获取请求历史 等等&hellip;&hellip;  如果GET请求需要附加额外信息，例如添加两个参数：
r = requests.get('http://httpbin.org/get?name=joecy&amp;age=24')
如果写成这样未免太繁琐，这时可以利用params参数：
import requests data = {&#39;wd&#39;:&#39;我&#39;} r = requests.get(&#39;https://baidu.com/s&#39;,params=data) print(r.status_code) r.encoding = &#39;utf-8&#39; print(r.text)  r.encoding = 'utf-8' 用于修改编码
 输出了百度关于关键词“我”的搜索结果。
抓取网页 抓取知乎发现页面：]]></description>
</item><item>
    <title>requests库</title>
    <link>/python/requests%E5%BA%93/</link>
    <pubDate>Fri, 24 Apr 2020 00:00:00 &#43;0000</pubDate>
    <author></author>
    <guid>/python/requests%E5%BA%93/</guid>
    <description><![CDATA[Requests库是用Python编写的，基于urllib，采用Apache2 Licensed开源协议的HTTP库；
相比urllib库，Requests库更加方便，可以节约我们大量的工作，完全满足HTTP测试需求。]]></description>
</item><item>
    <title>requests高级用法</title>
    <link>/python/requests%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/</link>
    <pubDate>Fri, 24 Apr 2020 00:00:00 &#43;0000</pubDate>
    <author></author>
    <guid>/python/requests%E9%AB%98%E7%BA%A7%E7%94%A8%E6%B3%95/</guid>
    <description><![CDATA[requests的高级用法包括如：文件上传、Cookies设置、代理设置、会话维持、超时设置等。
文件上传 import requests files = {&#39;file&#39;:open(&#39;logo.png&#39;,&#39;rb&#39;)} r = requests.post(&#39;http://httpbin.org/post&#39;,files=files) print(r.text) 首先创建一个表示文件的字典：files，它的键为file，值为使用open()函数'rb'模式打开的待上传文件。之后在post方法中传递参数files,值为files字典。
Cookies ]]></description>
</item></channel>
</rss>
