<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>json.dump() on XiaoXi Blog</title>
    <link>/tags/json.dump/</link>
    <description>Recent content in json.dump() on XiaoXi Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 24 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/json.dump/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Json模块</title>
      <link>/python/json%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>/python/json%E6%A8%A1%E5%9D%97/</guid>
      <description>很多时候，我们需要保存用户提供的信息，一种简单的方式时通过模块json来存储数据。
 JSON格式最初是为了JavaScript开发的，但随后成了一种常见格式，被众多编程语言采用。
 使用json.dump()存储数据 使用json.dump()可以轻松的存储数据，json.dump()接受两个参数：要存储的数据以及可用于存储数据的文件==对象==，很多时候在提供第二个参数时，都会错误的提供了文件名称，而不是文件==对象==，例如：
import json username = &amp;#39;111&amp;#39; with open(&amp;#39;name.json&amp;#39;,&amp;#39;w&amp;#39;) as name_obj: json.dump(username,name.json) 这时，就会报错：
NameError: name &amp;#39;name&amp;#39; is not defined 原因是我们错误向json.dump()传入了参数name.json，这并不是要存储数据的文件==对象==，应该传入参数name_obj。
import json username = &amp;#39;111&amp;#39; with open(&amp;#39;name.json&amp;#39;,&amp;#39;w&amp;#39;) as name_obj: json.dump(username,name_obj) 同时，也要注意在使用json.dump()存储数据时，函数open()需要传递参数&#39;w&#39;，以便获得写入权限。
使用json.load()读取数据 同样的，使用json.load()时，传入的也是文件==对象==：
import json with open(&amp;#39;name.json&amp;#39;) as name_obj: username_tmp = json.load(name_obj) print(username_tmp) 输出：
111 </description>
    </item>
    
  </channel>
</rss>